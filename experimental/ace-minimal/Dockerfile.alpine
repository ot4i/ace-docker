FROM alpine:3.17

# docker build -t ace-minimal:12.0.8.0-alpine -f Dockerfile.alpine .

MAINTAINER Trevor Dolby <trevor.dolby@ibm.com> (@trevor-dolby-at-ibm-com)

# Later versions from the same site, or else via the Developer edition download site linked from
# https://www.ibm.com/docs/en/app-connect/12.0?topic=enterprise-download-ace-developer-edition-get-started
ARG DOWNLOAD_URL=https://public.dhe.ibm.com/ibmdl/export/pub/software/websphere/integration/12.0.8.0-ACE-LINUX64-DEVELOPER.tar.gz
# Can be set higher if needed
ARG DOWNLOAD_CONNECTION_COUNT=1

RUN apk --update add --no-cache --virtual .build-deps curl binutils zstd \
    && set -x \
    && GLIBC_VER="2.34-r0" \
    && ALPINE_GLIBC_REPO="https://github.com/sgerrand/alpine-pkg-glibc/releases/download" \
    && GCC_LIBS_URL="https://archive.archlinux.org/packages/g/gcc-libs/gcc-libs-10.1.0-2-x86_64.pkg.tar.zst" \
    && GCC_LIBS_SHA256=f80320a03ff73e82271064e4f684cd58d7dbdb07aa06a2c4eea8e0f3c507c45c \
    && ZLIB_URL="https://archive.archlinux.org/packages/z/zlib/zlib-1%3A1.2.13-2-x86_64.pkg.tar.zst" \
    && ZLIB_SHA256=c4f394724b20b84d7304b23bbb58442b6ef53e5cbac89eb51e39d7f0a46abafd \    
    && curl -Lks https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub -o /etc/apk/keys/sgerrand.rsa.pub \
    && curl -Lks ${ALPINE_GLIBC_REPO}/${GLIBC_VER}/glibc-${GLIBC_VER}.apk > /tmp/${GLIBC_VER}.apk \
    && apk add --force-overwrite /tmp/${GLIBC_VER}.apk \
    && curl -Lks ${GCC_LIBS_URL} -o /tmp/gcc-libs.tar.zst \
    && echo "${GCC_LIBS_SHA256}  /tmp/gcc-libs.tar.zst" | sha256sum -c - \
    && mkdir /tmp/gcc \
    && zstd -d /tmp/gcc-libs.tar.zst \
    && tar -xf /tmp/gcc-libs.tar -C /tmp/gcc \
    && mv /tmp/gcc/usr/lib/libgcc* /tmp/gcc/usr/lib/libstdc++* /usr/glibc-compat/lib \
    && strip /usr/glibc-compat/lib/libgcc_s.so.* /usr/glibc-compat/lib/libstdc++.so* \
    && curl -Lks ${ZLIB_URL} -o /tmp/libz.tar.zst \
    && echo "${ZLIB_SHA256}  /tmp/libz.tar.zst" | sha256sum -c - \
    && mkdir /tmp/libz \
    && zstd -d /tmp/libz.tar.zst \
    && tar -xf /tmp/libz.tar -C /tmp/libz \
    && mv /tmp/libz/usr/lib/libz.so* /usr/glibc-compat/lib \
    && apk del --purge .build-deps \
    && rm -rf /tmp/${GLIBC_VER}.apk /tmp/gcc /tmp/gcc-libs.tar* /tmp/libz /tmp/libz.tar* /var/cache/apk/* \
    && mkdir /usr/glibc-compat/zlib-only \
    && ( cd /usr/glibc-compat/lib && tar -cf - libz* ) | ( cd /usr/glibc-compat/zlib-only && tar -xf - ) \
    && apk add 'apk-tools>2.12.5-r1'

ENV TZ=Europe/London

# Set up exclusions
COPY excludes*txt /tmp/

RUN cat /tmp/excludes-base.txt >> /tmp/all-excludes.txt && \
# Adapters are optional
    cat /tmp/excludes-adapters.txt >> /tmp/all-excludes.txt && \
# CICS is optional
    cat /tmp/excludes-cics.txt >> /tmp/all-excludes.txt && \
# FTE is optional
    cat /tmp/excludes-fte.txt >> /tmp/all-excludes.txt && \
# GlobalCache is optional; set MQSI_NO_CACHE_SUPPORT=1
    cat /tmp/excludes-globalcache.txt >> /tmp/all-excludes.txt && \
# IMS is optional
    cat /tmp/excludes-ims.txt >> /tmp/all-excludes.txt && \
# JDK provided by the product
#    cat /tmp/excludes-jdk.txt >> /tmp/all-excludes.txt && \
# node.js support is optional; use --no-nodejs on server start line
    cat /tmp/excludes-nodejs.txt >> /tmp/all-excludes.txt && \
# NPM install support is optional
    cat /tmp/excludes-npm.txt >> /tmp/all-excludes.txt && \
# ODBC drivers are optional
    cat /tmp/excludes-odbc.txt >> /tmp/all-excludes.txt && \
# Telemetry is optional
    cat /tmp/excludes-telemetry.txt >> /tmp/all-excludes.txt && \
# Toolkit is optional
    cat /tmp/excludes-tools.txt >> /tmp/all-excludes.txt && \
# Web UI support optional; use --admin-rest-api -1 on server start line
    cat /tmp/excludes-webui.txt >> /tmp/all-excludes.txt && \
# WSRR nodes are optional
    cat /tmp/excludes-wsrr.txt >> /tmp/all-excludes.txt && \
# XSLT nodes are optional
    cat /tmp/excludes-xmlt.txt >> /tmp/all-excludes.txt

# Set the environment correctly
COPY profile-with-product-java-paths.sh /etc/profile.d/profile-with-product-java-paths.sh
COPY product-java-paths.sh /etc/profile.d/product-java-paths.sh

# Install ACE 
RUN mkdir -p /opt/ibm && \
    apk add mksh bash aria2 binutils zip && \
    cd /tmp && \
    echo Downloading package ${DOWNLOAD_URL} && \
    aria2c -s ${DOWNLOAD_CONNECTION_COUNT} -j ${DOWNLOAD_CONNECTION_COUNT} -x ${DOWNLOAD_CONNECTION_COUNT} "${DOWNLOAD_URL}" && \
    tar -zxf *12.0*tar.gz --exclude-from=/tmp/all-excludes.txt --directory /opt/ibm && \
    rm -f *12.0*tar.gz && \
    mv /opt/ibm/ace-12* /opt/ibm/ace-12 && \
    find /opt/ibm -name "*.so*" -exec strip {} ";" && \
    find /opt/ibm -name "*.wrk" -exec strip {} ";" && \
    find /opt/ibm -name "*.lil" -exec strip {} ";" && \
    ( strip /opt/ibm/ace-12/server/bin/* 2>/dev/null || /bin/true ) && \
    zip -d /opt/ibm/ace-12/common/classes/IntegrationAPI.jar BIPmsgs_de.properties BIPmsgs_es.properties BIPmsgs_fr.properties BIPmsgs_it.properties BIPmsgs_ja.properties BIPmsgs_ko.properties BIPmsgs_pl.properties BIPmsgs_pt_BR.properties BIPmsgs_ru.properties BIPmsgs_tr.properties BIPmsgs_zh.properties BIPmsgs_zh_HK.properties BIPmsgs_zh_TW.properties && \
    apk del --purge binutils zip && \
    addgroup mqbrkrs && \
    cat /etc/profile.d/product-java-paths.sh >> /root/.bashrc

# Copy in the disabled components list
COPY image.components.yaml /opt/ibm/ace-12/image.components.yaml

# Issues with 5.1.4(1)-release (x86_64-alpine-linux-musl) on alpine
RUN sed -i 's/\/bin\/bash/\/bin\/mksh/g' /opt/ibm/ace-12/ace /opt/ibm/ace-12/server/bin/mqsicreateworkdir /opt/ibm/ace-12/server/bin/mqsipackagebar

RUN bash -c '. /etc/profile.d/product-java-paths.sh && /opt/ibm/ace-12/ace make registry global accept license deferred'

# Set BASH_ENV to source mqsiprofile when using docker exec bash -c
ENV BASH_ENV=/etc/profile.d/profile-with-product-java-paths.sh

# Create a user to run as, create the ace workdir, and chmod script files
RUN ( echo "Passw0rd" ; echo "Passw0rd" ) | adduser -u 1001 -h /home/aceuser -s /bin/bash aceuser mqbrkrs && \
    adduser aceuser mqbrkrs && \
    cat /etc/profile.d/product-java-paths.sh >> /home/aceuser/.bashrc && \
    chown aceuser /home/aceuser/.bashrc && \
    chmod 664 /home/aceuser/.bashrc && \
    su - aceuser -c "export LICENSE=accept && . /etc/profile.d/profile-with-product-java-paths.sh && /opt/ibm/ace-12/server/bin/mqsicreateworkdir /home/aceuser/ace-server" && \
    echo ". /etc/profile.d/profile-with-product-java-paths.sh" >> /home/aceuser/.bashrc

# Switch off the components that aren't in the image
COPY minimal-image.components.yaml /opt/ibm/ace-12/image.components.yaml

# aceuser
USER 1001

# Leaving this blank to avoid issues with openshift
#ENTRYPOINT ["bash"]
