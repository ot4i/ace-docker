FROM alpine:3.14

# docker build --build-arg DOWNLOAD_URL=http://kenya.hursley.uk.ibm.com:52367/ace-11.0.0.9.tar.gz --build-arg PRODUCT_LABEL=ace-11.0.0.9 -t ace-minimal-install:11.0.0.9-alpine-openjdk15 -f Dockerfile.alpine-openjdk15 .

# . /opt/ibm/ace-11/server/bin/mqsiprofile && IntegrationServer -w /tmp/blah --admin-rest-api -1 --no-nodejs

MAINTAINER Trevor Dolby <tdolby@uk.ibm.com> (@tdolby)

ARG DOWNLOAD_URL=http://kenya.hursley.uk.ibm.com:52367/ace-11.0.0.9.tar.gz
ARG JDK_DOWNLOAD_URL=http://kenya.hursley.uk.ibm.com:52367/openjdk-15-ea+28_linux-x64_bin.tar.gz
ARG PRODUCT_LABEL=ace-11.0.0.9

RUN apk --update add --no-cache --virtual .build-deps curl binutils \
    && GLIBC_VER="2.29-r0" \
    && ALPINE_GLIBC_REPO="https://github.com/sgerrand/alpine-pkg-glibc/releases/download" \
    && GCC_LIBS_URL="https://archive.archlinux.org/packages/g/gcc-libs/gcc-libs-8.2.1%2B20180831-1-x86_64.pkg.tar.xz" \
    && GCC_LIBS_SHA256=e4b39fb1f5957c5aab5c2ce0c46e03d30426f3b94b9992b009d417ff2d56af4d \
    && ZLIB_URL="https://archive.archlinux.org/packages/z/zlib/zlib-1%3A1.2.11-3-x86_64.pkg.tar.xz" \
    && ZLIB_SHA256=17aede0b9f8baa789c5aa3f358fbf8c68a5f1228c5e6cba1a5dd34102ef4d4e5 \
    && curl -Ls https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub -o /etc/apk/keys/sgerrand.rsa.pub \
    && curl -Ls ${ALPINE_GLIBC_REPO}/${GLIBC_VER}/glibc-${GLIBC_VER}.apk > /tmp/${GLIBC_VER}.apk \
    && apk add /tmp/${GLIBC_VER}.apk \
    && curl -Ls ${GCC_LIBS_URL} -o /tmp/gcc-libs.tar.xz \
    && echo "${GCC_LIBS_SHA256}  /tmp/gcc-libs.tar.xz" | sha256sum -c - \
    && mkdir /tmp/gcc \
    && tar -xf /tmp/gcc-libs.tar.xz -C /tmp/gcc \
    && mv /tmp/gcc/usr/lib/libgcc* /tmp/gcc/usr/lib/libstdc++* /usr/glibc-compat/lib \
    && strip /usr/glibc-compat/lib/libgcc_s.so.* /usr/glibc-compat/lib/libstdc++.so* \
    && curl -Ls ${ZLIB_URL} -o /tmp/libz.tar.xz \
    && echo "${ZLIB_SHA256}  /tmp/libz.tar.xz" | sha256sum -c - \
    && mkdir /tmp/libz \
    && tar -xf /tmp/libz.tar.xz -C /tmp/libz \
    && mv /tmp/libz/usr/lib/libz.so* /usr/glibc-compat/lib \
    && apk del --purge .build-deps \
    && rm -rf /tmp/${GLIBC_VER}.apk /tmp/gcc /tmp/gcc-libs.tar.xz /tmp/libz /tmp/libz.tar.xz /var/cache/apk/* \
    && mkdir /usr/glibc-compat/zlib-only \
    && ( cd /usr/glibc-compat/lib && tar -cf - libz* ) | ( cd /usr/glibc-compat/zlib-only && tar -xf - )

ENV TZ=Europe/London

# Set up exclusions
COPY excludes*txt /tmp/

RUN cat /tmp/excludes-base.txt >> /tmp/all-excludes.txt && \
# Adapters are optional
    cat /tmp/excludes-adapters.txt >> /tmp/all-excludes.txt && \
# CICS is optional
    cat /tmp/excludes-cics.txt >> /tmp/all-excludes.txt && \
# FTE is optional
    cat /tmp/excludes-fte.txt >> /tmp/all-excludes.txt && \
# GlobalCache is optional; set MQSI_NO_CACHE_SUPPORT=1 but note that 11.0.0.9 will print harmless error messages
    cat /tmp/excludes-globalcache.txt >> /tmp/all-excludes.txt && \
# IMS is optional
    cat /tmp/excludes-ims.txt >> /tmp/all-excludes.txt && \
# JDK provided by base layer; use MQSI_SIGNAL_EXCLUSIONS=11 and 
# MQSI_NON_IBM_JAVA=1 for non-IBM Java layers
    cat /tmp/excludes-jdk.txt >> /tmp/all-excludes.txt && \
# Kafka has log4j-1.2.17
    cat /tmp/excludes-kafka.txt >> /tmp/all-excludes.txt && \
# node.js support is optional; use --no-nodejs on server start line
    cat /tmp/excludes-nodejs.txt >> /tmp/all-excludes.txt && \
# NPM install support is optional
    cat /tmp/excludes-npm.txt >> /tmp/all-excludes.txt && \
# ODBC drivers are optional
    cat /tmp/excludes-odbc.txt >> /tmp/all-excludes.txt && \
# REST Web UI support optional; use --admin-rest-api -1 on server start line
    cat /tmp/excludes-webui.txt >> /tmp/all-excludes.txt && \
# XSLT nodes are optional
    cat /tmp/excludes-xmlt.txt >> /tmp/all-excludes.txt && \
# Toolkit is optional
    cat /tmp/excludes-tools.txt >> /tmp/all-excludes.txt && \
# Web UI support optional; use --admin-rest-api -1 on server start line
    cat /tmp/excludes-webui.txt >> /tmp/all-excludes.txt && \
# WSRR nodes are optional
    cat /tmp/excludes-wsrr.txt >> /tmp/all-excludes.txt && \
# XSLT nodes are optional
    cat /tmp/excludes-xmlt.txt >> /tmp/all-excludes.txt

# Set the env vars mentioned above
COPY profile-with-openjdk15-paths.sh /etc/profile.d/profile-with-openjdk15-paths.sh
COPY openjdk15-paths.sh /etc/profile.d/openjdk15-paths.sh

#     /opt/jdk-15/bin/jlink --strip-debug --no-man-pages --no-header-files --output /opt/openjdk-15 --add-modules java.base,java.management,java.naming,java.net.http,java.sql,java.xml,java.se
#
#     /opt/jdk-15/bin/jlink --strip-debug --no-man-pages --no-header-files --output /opt/openjdk-15 --add-modules java.base,java.compiler,java.datatransfer,java.instrument,java.logging,java.management,java.management.rmi,java.naming,java.net.http,java.prefs,java.rmi,java.scripting,java.se,java.security.jgss,java.security.sasl,java.sql,java.sql.rowset,java.transaction.xa,java.xml,java.xml.crypto,jdk.accessibility,jdk.aot,jdk.attach,jdk.charsets,jdk.compiler,jdk.crypto.cryptoki,jdk.crypto.ec,jdk.dynalink,jdk.hotspot.agent,jdk.internal.ed,jdk.internal.jvmstat,jdk.internal.le,jdk.internal.opt,jdk.internal.vm.ci,jdk.internal.vm.compiler,jdk.internal.vm.compiler.management,jdk.jartool,jdk.jcmd,jdk.jconsole,jdk.jdeps,jdk.jdi,jdk.jdwp.agent,jdk.jfr,jdk.jlink,jdk.management,jdk.management.agent,jdk.management.jfr,jdk.naming.dns,jdk.naming.rmi,jdk.net,jdk.nio.mapmode,jdk.sctp,jdk.security.auth,jdk.security.jgss,jdk.unsupported,jdk.xml.dom,jdk.zipfs



# Install ACE v11.0.0.9 and openjdk
RUN mkdir -p /opt/ibm && \
    apk add binutils zip bash curl && \
    cd /opt && \
    curl ${JDK_DOWNLOAD_URL} | tar -xzf - && \
    /opt/jdk-15/bin/jlink --strip-debug --no-man-pages --no-header-files --output /opt/openjdk-15 --add-modules java.base,java.compiler,java.datatransfer,java.instrument,java.logging,java.management,java.management.rmi,java.naming,java.net.http,java.prefs,java.rmi,java.scripting,java.se,java.security.jgss,java.security.sasl,java.sql,java.sql.rowset,java.transaction.xa,java.xml,java.xml.crypto,jdk.accessibility,jdk.aot,jdk.attach,jdk.charsets,jdk.compiler,jdk.crypto.cryptoki,jdk.crypto.ec,jdk.dynalink,jdk.hotspot.agent,jdk.internal.ed,jdk.internal.jvmstat,jdk.internal.le,jdk.internal.opt,jdk.internal.vm.ci,jdk.internal.vm.compiler,jdk.internal.vm.compiler.management,jdk.jartool,jdk.jcmd,jdk.jconsole,jdk.jdeps,jdk.jdi,jdk.jdwp.agent,jdk.jfr,jdk.jlink,jdk.management,jdk.management.agent,jdk.management.jfr,jdk.naming.dns,jdk.naming.rmi,jdk.net,jdk.nio.mapmode,jdk.sctp,jdk.security.auth,jdk.security.jgss,jdk.unsupported,jdk.xml.dom,jdk.zipfs && \
    rm -rf /opt/jdk-15 && \
    echo Downloading package ${DOWNLOAD_URL} && \
    curl ${DOWNLOAD_URL} \
    | tar zx --exclude-from=/tmp/all-excludes.txt --directory /opt/ibm && \
    mv /opt/ibm/${PRODUCT_LABEL} /opt/ibm/ace-11 && \
    find /opt/ibm -name "*.so*" -exec strip {} ";" && \
    find /opt/ibm -name "*.wrk" -exec strip {} ";" && \
    find /opt/ibm -name "*.lil" -exec strip {} ";" && \
    ( strip /opt/ibm/ace-11/server/bin/* 2>/dev/null || /bin/true ) && \
    zip -d /opt/ibm/ace-11/common/classes/IntegrationAPI.jar BIPmsgs_de.properties BIPmsgs_es.properties BIPmsgs_fr.properties BIPmsgs_it.properties BIPmsgs_ja.properties BIPmsgs_ko.properties BIPmsgs_pl.properties BIPmsgs_pt_BR.properties BIPmsgs_ru.properties BIPmsgs_tr.properties BIPmsgs_zh.properties BIPmsgs_zh_HK.properties BIPmsgs_zh_TW.properties && \
    apk del --purge binutils zip curl ncurses-terminfo-base ncurses-libs && \
    addgroup mqbrkrs && \
    cat /etc/profile.d/openjdk15-paths.sh >> /root/.bashrc && \
    mkdir /opt/ibm/ace-11/common/jdk && \
    ln -s /opt/openjdk-15 /opt/ibm/ace-11/common/jdk/jre

RUN bash -c '. /etc/profile.d/openjdk15-paths.sh && /opt/ibm/ace-11/ace make registry global accept license deferred'

